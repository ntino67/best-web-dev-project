-- Vous trouverez ici les requêtes SQL nécessaires à la réalisation des spécifications fonctionnelles suivantes :
USE web_project;

-- SFx1	Authentifier
SET @email_utilisateur := 'john.doe@example.com';
SET @mot_de_passe_utilisateur := 'password123';
SELECT email, password FROM Users WHERE email = @email_utilisateur AND password = @mot_de_passe_utilisateur;


-- SFx2	Rechercher une entreprise
SET @company_name = '';
SET @business_sector = '';
SET @locality = '';
SET @average_rating = 0;
SET @orderbyAZ = TRUE;
SET @orderbyZA = FALSE;
SET @orderby51 = FALSE;
SET @orderby15 = FALSE;
SET @orderbymax = TRUE;
SET @orderbymin = FALSE;

SELECT
    Companies.company_name AS 'Nom de l_entreprise',
    Business_sectors.business_sector AS 'Secteur d_activité',
    Cities.name AS 'Nom de la ville',
    COUNT(DISTINCT Applications.id_user) AS 'Nombre de stagiaires ayant postulé à une offre de cette entreprise',
    IFNULL(AVG(
        CASE 
            WHEN Company_Reviews.review_score IS NOT NULL THEN Company_Reviews.review_score
            ELSE NULL
        END), 'Non noté') AS 'Moyenne des évaluations des stagiaires/des Pilotes de promotion'
FROM
    Companies
    INNER JOIN Situated ON Companies.id_company = Situated.id_company
    INNER JOIN Cities ON Situated.id_city = Cities.id_city
    LEFT JOIN Applications ON Companies.id_company = Applications.id_user
    LEFT JOIN Company_Reviews ON Companies.id_company = Company_Reviews.id_company
    INNER JOIN Business_sectors ON Companies.id_business_sector = Business_sectors.id_business_sector
WHERE
    Companies.company_name LIKE CONCAT('%', @company_name, '%')
    AND Business_sectors.business_sector LIKE CONCAT('%', @business_sector, '%')
    AND Cities.name LIKE CONCAT('%', @locality, '%')
    AND Companies.company_active = TRUE
GROUP BY
    Companies.company_name,
    Business_sectors.business_sector,
    Cities.name
HAVING
    IFNULL(AVG(
        CASE 
            WHEN Company_Reviews.review_score IS NOT NULL THEN Company_Reviews.review_score
            ELSE NULL
        END), 0) >= @average_rating
ORDER BY
    IF(@orderbyAZ = TRUE, Companies.company_name, NULL) ASC,
    IF(@orderbyZA = TRUE, Companies.company_name, NULL) DESC,
    IF(@orderby51 = TRUE, IFNULL(AVG(
        CASE 
            WHEN Company_Reviews.review_score IS NOT NULL THEN Company_Reviews.review_score
            ELSE NULL
        END), 0), NULL) DESC,
    IF(@orderby15 = TRUE, IFNULL(AVG(
        CASE 
            WHEN Company_Reviews.review_score IS NOT NULL THEN Company_Reviews.review_score
            ELSE NULL
        END), 0), NULL) ASC,
    IF(@orderbymax = TRUE, COUNT(DISTINCT Applications.id_user), NULL) DESC,
    IF(@orderbymin = TRUE, COUNT(DISTINCT Applications.id_user), NULL) ASC;


	
-- SFx3	Créer une entreprise
SET @id_business_sector := 2;
SET @company_name := 'Test nouvelle entreprise';
SET @company_description := 'Elle propose rien de particulier à part de grande tasse de café';
SET @company_active := FALSE;
INSERT INTO Companies (id_business_sector, company_name, company_description, company_active)
VALUES
(@id_business_sector, @company_name, @company_description, @company_active);


-- SFx4 Modifier une entreprise
USE web_project;
SET @company_id := 138;
SET @new_company_name := 'Chibraltar';
SET @new_company_description := 'Rien à voir';
SET @new_company_active := FALSE;
SET @new_business_sector := 4;

UPDATE Companies 
SET 
    company_name = @new_company_name,
    company_description = @new_company_description,
    company_active = @new_company_active,
    id_business_sector = @new_business_sector
WHERE 
    id_company = @company_id;


-- SFx5	Evaluer une entreprise
SET @company_id := 145;
SET @user_id := 1; 
SET @review_text := '';
SET @review_score := 5;
INSERT INTO Company_Reviews (id_company, id_user, review_text, review_score)
SELECT 
	@company_id, @user_id, @review_text, @review_score
FROM 
    Companies
WHERE 
    id_company = @company_id
    AND company_active = TRUE;


-- SFx6	Supprimer une entreprise
SET @company_id = 2;
UPDATE Companies 
SET company_active = FALSE 
WHERE id_company = @company_id;


-- SFx7	Consulter les stats des entreprises


-- SFx8	Rechercher une offre
SET @skill_name = '';
SET @locality = '';
SET @company_name = '';
SET @promotion_type = '';
SET @internship_duration = '';
SET @base_salary = '';
SET @internship_offer_created_at = '';
SET @available_slots = '';
SET @applications_count = '';
SET @business_sector = 'Generalist';
SET @orderbyAZ = TRUE;
SET @orderbyZA = FALSE;
SET @orderby51 = FALSE;
SET @orderby15 = FALSE;
SET @orderbymax = FALSE;
SET @orderbymin = FALSE;

SELECT
    Internship_offers.internship_offer_title AS 'Titre de l_offre',
    IFNULL(
        (
            SELECT GROUP_CONCAT(Classes.class_year)
            FROM Addressed_to
            LEFT JOIN Classes ON Addressed_to.id_class = Classes.id_class
            WHERE Addressed_to.id_internship_offer = Internship_offers.id_internship_offer
            GROUP BY Addressed_to.id_internship_offer
        ),
        ''
    ) AS 'Types de promotions concernées',
    IFNULL(
        (
            SELECT GROUP_CONCAT(Skills.skill_name)
            FROM Required_Skills
            LEFT JOIN Skills ON Required_Skills.id_skill = Skills.id_skill
            WHERE Required_Skills.id_internship_offer = Internship_offers.id_internship_offer
            GROUP BY Required_Skills.id_internship_offer
        ),
        ''
    ) AS 'Compétences requises',
    Business_sectors.business_sector AS 'Secteur d_activité',
    Cities.name AS 'Localité',
    Companies.company_name AS 'Nom de l_entreprise',
    Internship_offers.internship_duration AS 'Durée du stage',
    Internship_offers.base_salary AS 'Base de rémunération',
    Internship_offers.internship_offer_created_at AS 'Date de l_offre',
    Internship_offers.available_slots AS 'Nombre de places offertes aux étudiants',
    COUNT(Applications.id_user) AS 'Nombre d_élèves ayant déjà postulé à cette offre'
FROM
    Internship_offers
    LEFT JOIN Companies ON Internship_offers.id_company = Companies.id_company
    LEFT JOIN Business_sectors ON Internship_offers.id_business_sector = Business_sectors.id_business_sector
    LEFT JOIN Applications ON Internship_offers.id_internship_offer = Applications.id_internship_offer
    LEFT JOIN Situated ON Internship_offers.id_company = Situated.id_company
    LEFT JOIN Cities ON Situated.id_city = Cities.id_city
    LEFT JOIN Addressed_to ON Internship_offers.id_internship_offer = Addressed_to.id_internship_offer
    LEFT JOIN Classes ON Addressed_to.id_class = Classes.id_class
    LEFT JOIN Required_Skills ON Internship_offers.id_internship_offer = Required_Skills.id_internship_offer
    LEFT JOIN Skills ON Required_Skills.id_skill = Skills.id_skill
WHERE
    (Cities.name LIKE CONCAT('%', @locality, '%') OR @locality = '')
    AND (Companies.company_name LIKE CONCAT('%', @company_name, '%') OR @company_name = '')
    AND (Classes.class_year LIKE CONCAT('%', @promotion_type, '%') OR @promotion_type = '')
    AND (Skills.skill_name LIKE CONCAT('%', @skill_name, '%') OR @skill_name = '')
    AND (Internship_offers.internship_duration LIKE CONCAT('%', @internship_duration, '%') OR @internship_duration = '')
    AND (Internship_offers.base_salary LIKE CONCAT('%', @base_salary, '%') OR @base_salary = '')
    AND (Internship_offers.internship_offer_created_at LIKE CONCAT('%', @internship_offer_created_at, '%') OR @internship_offer_created_at = '')
    AND (Internship_offers.available_slots LIKE CONCAT('%', @available_slots, '%') OR @available_slots = '')
    AND (Business_sectors.business_sector LIKE CONCAT('%', @business_sector, '%') OR @business_sector = '')
GROUP BY
    Internship_offers.id_internship_offer,
    Cities.name,
    Companies.company_name,
    Internship_offers.internship_duration,
    Internship_offers.base_salary,
    Internship_offers.internship_offer_created_at,
    Internship_offers.available_slots
HAVING
    COUNT(Applications.id_user) >= @applications_count
ORDER BY
    IF(@orderbyAZ = TRUE, Internship_offers.internship_offer_title, NULL) ASC,
    IF(@orderbyZA = TRUE, Internship_offers.internship_offer_title, NULL) DESC,
    IF(@orderby51 = TRUE, Internship_offers.available_slots, NULL) DESC,
    IF(@orderby15 = TRUE, Internship_offers.available_slots, NULL) ASC,
    IF(@orderbymax = TRUE, COUNT(Applications.id_user), NULL) DESC,
    IF(@orderbymin = TRUE, COUNT(Applications.id_user), NULL) ASC;



-- SFx9	Créer une offre
SET @id_company := 1; 
SET @available_slots := 5;
SET @title := 'Offre de stage en développement web';
SET @description := 'Stage développement web qui concerne principalement la partie back-end.';
SET @created_at := CURRENT_DATE; 
SET @expires_at := '2024-06-30';
SET @id_business_sector := 3;
SET @duration := 4; 
SET @base_salary = 2000;
INSERT INTO Internship_offers (id_company, id_business_sector, available_slots, internship_offer_title, internship_offer_description, internship_offer_created_at, internship_offer_expires_at, internship_duration, base_salary, internship_offer_active)
VALUES (@id_company, @id_business_sector, @available_slots, @title, @description, @created_at, @expires_at, @duration, @base_salary, 1);


SET @id_internship_offer = LAST_INSERT_ID();
SET @id_class1 = 1;
SET @id_class2 = 2;
SET @id_class3 = 3;
SET @id_class4 = 4;
SET @id_class5 = 5;
INSERT INTO Addressed_to (id_class, id_internship_offer) 
SELECT id_class, @id_internship_offer FROM Classes  
WHERE id_class IN (@id_class1, @id_class2, @id_class3, @id_class4, @id_class5);


-- SFx10 Modifier une offre
SET @id_internship_offer := 25;
SET @id_company := 3; 
SET @available_slots := 10;
SET @internship_offer_title := 'Offre de stage BTP';
SET @internship_offer_description := 'Stage BTP';
SET @expires_at := '2024-08-22';
SET @id_business_sector := 2;
SET @duration := 7;

UPDATE Internship_offers
SET 
    internship_offer_title = IF(@internship_offer_title <> '', @internship_offer_title, internship_offer_title),
    internship_offer_description = IF(@internship_offer_description <> '', @internship_offer_description, internship_offer_description),
    available_slots = IF(@available_slots <> '', @available_slots, available_slots),
    id_business_sector = IF(@id_business_sector <> '', @id_business_sector, id_business_sector),
    id_company = IF(@id_company <> '', @id_company, id_company),
    internship_offer_created_at = IF(@created_at <> '', @created_at, internship_offer_created_at),
    internship_offer_expires_at = IF(@expires_at <> '', @expires_at, internship_offer_expires_at),
    internship_duration = IF(@duration <> '', @duration, internship_duration)
WHERE id_internship_offer = @id_internship_offer
    AND (@internship_offer_title <> '' OR @internship_offer_description <> '' OR @available_slots <> '' OR @id_business_sector <> '' OR @id_company <> '' OR @created_at <> '' OR @expires_at <> '' OR @duration <> '');


SET @id_user = LAST_INSERT_ID();
SET @id_class1 = '';
SET @id_class2 = 2;
SET @id_class3 = '';
SET @id_class4 = 4;
SET @id_class5 = '';
DELETE FROM Addressed_to 
WHERE id_internship_offer = @id_internship_offer
AND (@id_class1 <> '' OR @id_class2 <> '' OR @id_class3 <> '' OR @id_class4 <> '' OR @id_class5 <> '');
INSERT INTO Addressed_to (id_internship_offer, id_class)
SELECT @id_internship_offer, id_class FROM Classes 
WHERE id_class IN (
    @id_class1, @id_class2, @id_class3, @id_class4, @id_class5
);


-- SFx11 Supprimer une offre
SET @offer_id := 1;
UPDATE Internship_offers 
SET internship_offer_active = FALSE
WHERE id_internship_offer = @offer_id;


-- SFx12 Consulter les stats des offres


-- SFx13 Rechercher un compte pilote


-- SFx14 Créer un compte pilote
SET @first_name = 'Taxe';
SET @last_name = 'Endéter';
SET @email = 'trouverunstage@grien.com';
SET @password = 'peloton';
SET @id_center = 1;
INSERT INTO Users (first_name, last_name, email, password, user_created_at, id_center, id_role, user_active)
VALUES (@first_name, @last_name, @email, @password, CURRENT_TIMESTAMP, @id_center, 2, 1);

SET @id_user = LAST_INSERT_ID();
SET @id_class1 = 1;
SET @id_class2 = 2;
SET @id_class3 = 3;
SET @id_class4 = 4;
SET @id_class5 = 5;
INSERT INTO Related_to_class (id_user, id_class)
SELECT @id_user, id_class FROM Classes 
WHERE id_class IN (@id_class1, @id_class2, @id_class3, @id_class4, @id_class5);


-- SFx15 Modifier un compte pilote
SET @first_name = 'Taxichaise';
SET @last_name = 'Ponpidou';
SET @email = '';
SET @password = '';
SET @id_center = 5;
SET @id_user = 6;
UPDATE Users
SET 
    first_name = IF(@first_name <> '', @first_name, first_name),
    last_name = IF(@last_name <> '', @last_name, last_name),
    email = IF(@email <> '', @email, email),
    password = IF(@password <> '', @password, password),
    id_center = IF(@id_center <> '', @id_center, id_center)
WHERE id_user = @id_user
    AND (@first_name <> '' OR @last_name <> '' OR @email <> '' OR @password <> '' OR @id_center <> '');

SET @id_user = LAST_INSERT_ID();
SET @id_class1 = '';
SET @id_class2 = 2;
SET @id_class3 = '';
SET @id_class4 = 4;
SET @id_class5 = '';
DELETE FROM Related_to_class 
WHERE id_user = @id_user
AND (@id_class1 <> '' OR @id_class2 <> '' OR @id_class3 <> '' OR @id_class4 <> '' OR @id_class5 <> '' );
INSERT INTO Related_to_class (id_user, id_class)
SELECT @id_user, id_class FROM Classes 
WHERE id_class IN (
    @id_class1, @id_class2, @id_class3, @id_class4, @id_class5
);


-- SFx16 Supprimer un compte pilote
SET @user_id = 4;
UPDATE Users 
SET user_active = FALSE
WHERE id_user = @user_id AND id_role = 2;


-- SFx17 Rechercher un compte étudiant


-- SFx18 Créer un compte étudiant
SET @first_name = 'jayzon';
SET @last_name = 'duere';
SET @email = 'monemail.fr';
SET @password = 'motdepasse';
SET @id_center = 9; 
INSERT INTO Users (first_name, last_name, email, password, user_created_at, id_center, id_role, user_active)
VALUES (@first_name, @last_name, @email, @password, CURRENT_TIMESTAMP, @id_center, 3, 1);


-- SFx19 Modifier un compte étudiant
SET @first_name = 'praujais part tèrd';
SET @last_name = 'pouloupoupi';
SET @email = '';
SET @password = '';
SET @id_center = 5;
SET @id_user = 4;
UPDATE Users
SET 
    first_name = IF(@first_name <> '', @first_name, first_name),
    last_name = IF(@last_name <> '', @last_name, last_name),
    email = IF(@email <> '', @email, email),
    password = IF(@password <> '', @password, password),
    id_center = IF(@id_center <> '', @id_center, id_center)
WHERE id_user = @id_user
    AND (@first_name <> '' OR @last_name <> '' OR @email <> '' OR @password <> '' OR @id_center <> '') AND id_role = 3;


-- SFx20 Supprimer un compte étudiant
SET @user_id = 4;
UPDATE Users 
SET user_active = FALSE
WHERE id_user = @user_id AND id_role = 3;


-- SFx21 Consulter les stats des étudiants


-- SFx22 Ajouter une offre à la wish-list
SET @id_internship_offer = 2;
SET @id_user = 5;
INSERT INTO Wish_list (id_internship_offer, id_user) VALUES (@id_internship_offer, @id_user);


-- SFx23 Retirer une offre à la wish-list
SET @id_internship_offer = 2;
SET @id_user = 5;
DELETE FROM Wish_list
WHERE id_internship_offer = @id_internship_offer AND id_user = @id_user;


-- SFx24 Postuler à une offre
SET @id_user = 3;
SET @id_internship_offer = 49;
SET @CV = 'test_Sfx24';
SET @motivation_letter = 'je_veux_que cette_requete_fonctionne';
INSERT INTO Applications (id_user, id_internship_offer, CV, motivation_letter)
VALUES (@id_user, @id_internship_offer, @CV, @motivation_letter);
